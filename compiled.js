// ==UserScript==
// @name         Banana4Ape
// @namespace    http://tampermonkey.net/
// @version      18.07.25
// @description  try to take over the world!
// @author       APES_COMMUNITY
// @match        https://apes.io/
// @icon         https://www.google.com/s2/favicons?sz=64&domain=apes.io
// @grant        none
// @run-at       document-start
// ==/UserScript==

let m_ticks = 0, m_last_ticks = 0, m_game_canvas_element = null, m_requestAnimationFrame = window.requestAnimationFrame;let eo_clientX = 0, eo_old_clientX = 0, eo_clientY = 0, eo_old_clientY = 0, eo_movementX = 0, eo_movementY = 0, eo_ui_is_active = false, eo_last_ui_is_active = false;let uimm_menu_element = null;function eo_update() { eo_last_ui_is_active = eo_ui_is_active; window.dispatchEvent(new PointerEvent("pointerrawupdate"));}function uimm_menu_create_styles() { uimm_menu_styles = document.createElement("style"); uimm_menu_styles.innerHTML = `#uimm { top: calc(50% - 200px); left: calc(50% - 400px); width: 800px; height: 400px; position: absolute; border-top-left-radius: 20px; background-color: #1e1b25; z-index: 999999!important;}#uimm .top { display: flex; width: 100%; height: 60px;}#uimm .top .left { width: 60px; height: 100%;}#uimm .top .right { display: flex; align-items: center; width: 740px;}#uimm .top .right span { font-size: 28px; margin-left: 10px;}#uimm .bottom { display: flex; width: 100%; height: 340px;}#uimm .bottom .left { width: 60px; height: 100%;}#uimm .bottom .left .button { width: 60px; height: 60px;}#uimm .bottom .right { width: 740px; height: 100%; border-top-left-radius: 20px; background-color: #17151b;}`; document.head.appendChild(uimm_menu_styles);}function uimm_menu_create_element() { uimm_menu_element = document.createElement("div"); uimm_menu_element.innerHTML = `<div id="uimm"> <div class="top"> <div class="left"> </div> <div class="right"> <span>Banana4Ape</span> </div> </div> <div class="bottom"> <div class="left"> <div id="uimm_aim_button" class="button"> </div> <div id="uimm_chat_button" class="button"> </div> <div id="uimm_settings_button" class="button"> </div> </div> <div class="right"></div> </div></div>`; document.body.appendChild(uimm_menu_element);}function uimm_menu_show() { uimm_menu_element.style.display = "block";}function uimm_menu_hide() { uimm_menu_element.style.display = "none";}setInterval(() => { console.log(`${m_ticks - m_last_ticks} UPS`); m_last_ticks = m_ticks;}, 1000);window.requestAnimationFrame = rt => { if (eo_ui_is_active != eo_last_ui_is_active) { if (eo_ui_is_active) uimm_menu_show(); else uimm_menu_hide(); } eo_update(); m_ticks++; return m_requestAnimationFrame(rt);};document.addEventListener("DOMContentLoaded", () => { m_game_canvas_element = document.querySelector("#game-canvas");});Object.defineProperty(window, "onpointerrawupdate", { enumerable: true, configurable: true, set(handler) { console.log("[INJ] onpointerrawupdate"); window.addEventListener("pointerrawupdate", event => { if (!event.isTrusted) { event.getCoalescedEvents = () => { eo_movementX = Math.min(100, Math.max(-100, (eo_clientX - eo_old_clientX))); eo_movementY = Math.min(100, Math.max(-100, (eo_clientY - eo_old_clientY))); eo_old_clientX += eo_movementX; eo_old_clientY += eo_movementY; return [{ clientX: eo_clientX, clientY: eo_clientY, movementX: eo_movementX, movementY: eo_movementY }]; }; }; handler(event); }); }});Object.defineProperty(document, "onkeydown", { enumerable: true, configurable: true, set(handler) { console.log("[INJ] onkeydown"); document.addEventListener("keydown", event => { if (event.code == "ShiftRight") document.exitPointerLock(); handler(event); }); }});Object.defineProperty(document, "onpointerlockchange", { enumerable: true, configurable: true, set(handler) { console.log("[INJ] onpointerlockchange"); document.addEventListener("pointerlockchange", event => { eo_ui_is_active = document.pointerLockElement == null; handler(event); }); }});Object.defineProperty(document, "onmousedown", { enumerable: true, configurable: true, set(handler) { console.log("[INJ] onmousedown"); document.addEventListener("mousedown", event => { if (event.target != m_game_canvas_element) return; handler(event); }); }});document.addEventListener("DOMContentLoaded", () => { uimm_menu_create_styles(); uimm_menu_create_element();});